{"ast":null,"code":"import { storage } from '../../firebase/firebase';\nexport const mergeAnnotations = async (docRef, xfdf) => {\n  const PDFNet = window.PDFNet;\n  const CoreControls = window.CoreControls;\n  CoreControls.setWorkerPath('webviewer/core');\n  const storageRef = storage.ref();\n  const URL = await storageRef.child(docRef).getDownloadURL();\n\n  const main = async () => {\n    const doc = await PDFNet.PDFDoc.createFromURL(URL);\n    doc.initSecurityHandler();\n    let i;\n\n    for (i = 0; i < xfdf.length; i++) {\n      console.log(xfdf[i]);\n      let fdfDoc = await PDFNet.FDFDoc.createFromXFDF(xfdf[i]);\n      await doc.fdfMerge(fdfDoc);\n      await doc.flattenAnnotations();\n    }\n\n    const docbuf = await doc.saveMemoryBuffer(PDFNet.SDFDoc.SaveOptions.e_linearized);\n    const blob = new Blob([docbuf], {\n      type: 'application/pdf'\n    });\n    const documentRef = storageRef.child(docRef);\n    documentRef.put(blob).then(function (snapshot) {\n      console.log('Uploaded the blob');\n    });\n  };\n\n  await PDFNet.runWithCleanup(main);\n};","map":{"version":3,"sources":["C:/Users/boy/Desktop/pdf/pdftron-sign-app-master/src/components/MergeAnnotations/MergeAnnotations.js"],"names":["storage","mergeAnnotations","docRef","xfdf","PDFNet","window","CoreControls","setWorkerPath","storageRef","ref","URL","child","getDownloadURL","main","doc","PDFDoc","createFromURL","initSecurityHandler","i","length","console","log","fdfDoc","FDFDoc","createFromXFDF","fdfMerge","flattenAnnotations","docbuf","saveMemoryBuffer","SDFDoc","SaveOptions","e_linearized","blob","Blob","type","documentRef","put","then","snapshot","runWithCleanup"],"mappings":"AAAA,SAASA,OAAT,QAAwB,yBAAxB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,OAAOC,MAAP,EAAeC,IAAf,KAAwB;AACtD,QAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AACA,QAAME,YAAY,GAAGD,MAAM,CAACC,YAA5B;AACAA,EAAAA,YAAY,CAACC,aAAb,CAA2B,gBAA3B;AAEA,QAAMC,UAAU,GAAGR,OAAO,CAACS,GAAR,EAAnB;AACA,QAAMC,GAAG,GAAG,MAAMF,UAAU,CAACG,KAAX,CAAiBT,MAAjB,EAAyBU,cAAzB,EAAlB;;AAEA,QAAMC,IAAI,GAAG,YAAY;AACvB,UAAMC,GAAG,GAAG,MAAMV,MAAM,CAACW,MAAP,CAAcC,aAAd,CAA4BN,GAA5B,CAAlB;AACAI,IAAAA,GAAG,CAACG,mBAAJ;AAEA,QAAIC,CAAJ;;AACA,SAAKA,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAGf,IAAI,CAACgB,MAAnB,EAA2BD,CAAC,EAA5B,EAAgC;AAC5BE,MAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAI,CAACe,CAAD,CAAhB;AACA,UAAII,MAAM,GAAG,MAAMlB,MAAM,CAACmB,MAAP,CAAcC,cAAd,CAA6BrB,IAAI,CAACe,CAAD,CAAjC,CAAnB;AACA,YAAMJ,GAAG,CAACW,QAAJ,CAAaH,MAAb,CAAN;AACA,YAAMR,GAAG,CAACY,kBAAJ,EAAN;AACH;;AAED,UAAMC,MAAM,GAAG,MAAMb,GAAG,CAACc,gBAAJ,CACnBxB,MAAM,CAACyB,MAAP,CAAcC,WAAd,CAA0BC,YADP,CAArB;AAGA,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACN,MAAD,CAAT,EAAmB;AAC9BO,MAAAA,IAAI,EAAE;AADwB,KAAnB,CAAb;AAIA,UAAMC,WAAW,GAAG3B,UAAU,CAACG,KAAX,CAAiBT,MAAjB,CAApB;AAEAiC,IAAAA,WAAW,CAACC,GAAZ,CAAgBJ,IAAhB,EAAsBK,IAAtB,CAA2B,UAAUC,QAAV,EAAoB;AAC7ClB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAFD;AAGD,GAxBD;;AA0BA,QAAMjB,MAAM,CAACmC,cAAP,CAAsB1B,IAAtB,CAAN;AACD,CAnCM","sourcesContent":["import { storage } from '../../firebase/firebase';\n\nexport const mergeAnnotations = async (docRef, xfdf) => {\n  const PDFNet = window.PDFNet;\n  const CoreControls = window.CoreControls;\n  CoreControls.setWorkerPath('webviewer/core');\n\n  const storageRef = storage.ref();\n  const URL = await storageRef.child(docRef).getDownloadURL();\n  \n  const main = async () => {\n    const doc = await PDFNet.PDFDoc.createFromURL(URL);\n    doc.initSecurityHandler();\n\n    let i;\n    for (i=0; i < xfdf.length; i++) {\n        console.log(xfdf[i]);\n        let fdfDoc = await PDFNet.FDFDoc.createFromXFDF(xfdf[i]);\n        await doc.fdfMerge(fdfDoc);\n        await doc.flattenAnnotations();\n    }\n  \n    const docbuf = await doc.saveMemoryBuffer(\n      PDFNet.SDFDoc.SaveOptions.e_linearized,\n    );\n    const blob = new Blob([docbuf], {\n      type: 'application/pdf',\n    });\n  \n    const documentRef = storageRef.child(docRef);\n  \n    documentRef.put(blob).then(function (snapshot) {\n      console.log('Uploaded the blob');\n    });\n  }\n\n  await PDFNet.runWithCleanup(main);\n};\n"]},"metadata":{},"sourceType":"module"}