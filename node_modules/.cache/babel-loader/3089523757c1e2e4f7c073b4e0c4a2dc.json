{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boy\\\\Desktop\\\\pdf\\\\pdftron-sign-app-master\\\\src\\\\components\\\\ViewDocument\\\\ViewDocument.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { navigate } from '@reach/router';\nimport { Box, Column, Heading, Row, Stack, Button } from 'gestalt';\nimport { selectDocToView } from './ViewDocumentSlice';\nimport { storage } from '../../firebase/firebase';\nimport WebViewer from '@pdftron/webviewer';\nimport 'gestalt/dist/gestalt.css';\nimport './ViewDocument.css';\n\nconst ViewDocument = () => {\n  _s();\n\n  const [instance, setInstance] = useState(null);\n  const doc = useSelector(selectDocToView);\n  const {\n    docRef\n  } = doc;\n  const viewer = useRef(null);\n  useEffect(() => {\n    WebViewer({\n      path: 'webviewer',\n      disabledElements: ['ribbons', 'toggleNotesButton', 'contextMenuPopup']\n    }, viewer.current).then(async instance => {\n      // select only the view group\n      instance.setToolbarGroup('toolbarGroup-View');\n      setInstance(instance); // load document\n\n      const storageRef = storage.ref();\n      const URL = await storageRef.child(docRef).getDownloadURL();\n      console.log(URL);\n      instance.docViewer.loadDocument(URL);\n    });\n  }, [docRef]);\n\n  const download = () => {\n    instance.downloadPdf(true);\n  };\n\n  const doneViewing = async () => {\n    navigate('/');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'prepareDocument',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    direction: \"row\",\n    flex: \"grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"View Document\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    padding: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gap: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: download,\n    accessibilityLabel: \"download signed document\",\n    text: \"Download\",\n    iconEnd: \"download\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: doneViewing,\n    accessibilityLabel: \"complete signing\",\n    text: \"Done viewing\",\n    iconEnd: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(Column, {\n    span: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"webviewer\",\n    ref: viewer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(ViewDocument, \"aKTV7SYO3WY3F4ITnpbdSDRqH8E=\", false, function () {\n  return [useSelector];\n});\n\n_c = ViewDocument;\nexport default ViewDocument;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDocument\");","map":{"version":3,"sources":["C:/Users/boy/Desktop/pdf/pdftron-sign-app-master/src/components/ViewDocument/ViewDocument.js"],"names":["React","useRef","useEffect","useState","useSelector","navigate","Box","Column","Heading","Row","Stack","Button","selectDocToView","storage","WebViewer","ViewDocument","instance","setInstance","doc","docRef","viewer","path","disabledElements","current","then","setToolbarGroup","storageRef","ref","URL","child","getDownloadURL","console","log","docViewer","loadDocument","download","downloadPdf","doneViewing"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { navigate } from '@reach/router';\nimport { Box, Column, Heading, Row, Stack, Button } from 'gestalt';\nimport { selectDocToView } from './ViewDocumentSlice';\nimport { storage } from '../../firebase/firebase';\nimport WebViewer from '@pdftron/webviewer';\nimport 'gestalt/dist/gestalt.css';\nimport './ViewDocument.css';\n\nconst ViewDocument = () => {\n  const [instance, setInstance] = useState(null);\n\n  const doc = useSelector(selectDocToView);\n  const { docRef } = doc;\n\n  const viewer = useRef(null);\n\n  useEffect(() => {\n    WebViewer(\n      {\n        path: 'webviewer',\n        disabledElements: [\n          'ribbons',\n          'toggleNotesButton',\n          'contextMenuPopup',\n        ],\n      },\n      viewer.current,\n    ).then(async instance => {\n      // select only the view group\n      instance.setToolbarGroup('toolbarGroup-View');\n\n      setInstance(instance);\n\n      // load document\n      const storageRef = storage.ref();\n      const URL = await storageRef.child(docRef).getDownloadURL();\n      console.log(URL);\n      instance.docViewer.loadDocument(URL);\n    });\n  }, [docRef]);\n\n  const download = () => {\n    instance.downloadPdf(true);\n  };\n\n  const doneViewing = async () => {\n    navigate('/');\n  }\n\n  return (\n    <div className={'prepareDocument'}>\n      <Box display=\"flex\" direction=\"row\" flex=\"grow\">\n        <Column span={2}>\n          <Box padding={3}>\n            <Heading size=\"md\">View Document</Heading>\n            <hr></hr>\n          </Box>\n          <Box padding={3}>\n            <Row gap={1}>\n              <Stack>\n                <Box padding={2}>\n                  <Button\n                    onClick={download}\n                    accessibilityLabel=\"download signed document\"\n                    text=\"Download\"\n                    iconEnd=\"download\"\n                  />\n                </Box>\n                <Box padding={2}>\n                  <Button\n                    onClick={doneViewing}\n                    accessibilityLabel=\"complete signing\"\n                    text=\"Done viewing\"\n                    iconEnd=\"check\"\n                  />\n                </Box>\n              </Stack>\n            </Row>\n          </Box>\n        </Column>\n        <Column span={10}>\n          <div className=\"webviewer\" ref={viewer}></div>\n        </Column>\n      </Box>\n    </div>\n  );\n};\n\nexport default ViewDocument;\n"]},"metadata":{},"sourceType":"module"}