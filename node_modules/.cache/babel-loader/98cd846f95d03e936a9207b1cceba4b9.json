{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boy\\\\Desktop\\\\pdf\\\\pdftron-sign-app-master\\\\src\\\\components\\\\PasswordReset\\\\PasswordReset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { Box, Button, Toast, Container, TextField, Heading } from 'gestalt';\nimport 'gestalt/dist/gestalt.css';\nimport { auth } from '../../firebase/firebase';\n\nconst PasswordReset = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendResetEmail = event => {\n    auth.sendPasswordResetEmail(email).then(() => {\n      setEmailHasBeenSent(true);\n      setTimeout(() => {\n        setEmailHasBeenSent(false);\n      }, 3000);\n    }).catch(() => {\n      setError('Error resetting password');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Reset your password\")), error !== null && /*#__PURE__*/React.createElement(Toast, {\n    text: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 30\n    }\n  }), emailHasBeenSent !== false && /*#__PURE__*/React.createElement(Toast, {\n    text: 'An email with reset info is on the way',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    onChange: event => setEmail(event.value),\n    placeholder: \"Enter your email\",\n    label: \"Email\",\n    value: email,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => {\n      sendResetEmail(event);\n      navigate('/');\n    },\n    text: \"Reset\",\n    color: \"blue\",\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"text-blue-500 hover:text-blue-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Back to the Sign in\")))));\n};\n\n_s(PasswordReset, \"REX/NvqC9iz8xytsxHIRBaVFD0U=\");\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["C:/Users/boy/Desktop/pdf/pdftron-sign-app-master/src/components/PasswordReset/PasswordReset.js"],"names":["React","useState","Link","navigate","Box","Button","Toast","Container","TextField","Heading","auth","PasswordReset","email","setEmail","emailHasBeenSent","setEmailHasBeenSent","error","setError","sendResetEmail","event","sendPasswordResetEmail","then","setTimeout","catch","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { Box, Button, Toast, Container, TextField, Heading } from 'gestalt';\nimport 'gestalt/dist/gestalt.css';\n\nimport { auth } from '../../firebase/firebase';\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState('');\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendResetEmail = event => {\n    auth\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        setEmailHasBeenSent(true);\n        setTimeout(() => {\n          setEmailHasBeenSent(false);\n        }, 3000);\n      })\n      .catch(() => {\n        setError('Error resetting password');\n      });\n  };\n\n  return (\n    <div>\n      <Box padding={3}>\n        <Container>\n          <Box padding={3}>\n            <Heading size=\"md\">Reset your password</Heading>\n          </Box>\n          {error !== null && <Toast text={error} />}\n          {emailHasBeenSent !== false && (\n            <Toast text={'An email with reset info is on the way'} />\n          )}\n          <Box padding={2}>\n            <TextField\n              id=\"email\"\n              onChange={event => setEmail(event.value)}\n              placeholder=\"Enter your email\"\n              label=\"Email\"\n              value={email}\n              type=\"email\"\n            />\n          </Box>\n          <Box padding={2}>\n            <Button\n              onClick={event => {\n                sendResetEmail(event);\n                navigate('/');\n              }}\n              text=\"Reset\"\n              color=\"blue\"\n              inline\n            />\n          </Box>\n          <Box padding={2}>\n            <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\n              Back to the Sign in\n            </Link>\n          </Box>\n        </Container>\n      </Box>\n    </div>\n  );\n};\nexport default PasswordReset;\n"]},"metadata":{},"sourceType":"module"}